{"version":3,"sources":["api/shop.js","redux/Types.js","redux/products.js","components/Product.js","components/ProductItem.js","components/ProductsList.js","containers/ProductsContainer.js","redux/actions.js","redux/cart.js","redux/rootReducer.js","components/modal/Modal.js","components/Cart.js","containers/CartContainer.js","components/pictures/tv.jpg","components/pictures/phone.jpg","components/pictures/nout.jpeg","components/pictures/dvd.png","components/Carusel.js","App.js","reportWebVitals.js","index.js"],"names":["cb","timeout","setTimeout","_products","payload","console","log","ADD_TO_CART","CHECKOUT_REQUEST","CHECKOUT_FAILURE","RECEIVE_PRODUCTS","products","state","action","type","inventory","combineReducers","byId","reduce","obj","product","id","productId","visibleIds","map","getProduct","getVisibleProducts","Product","price","quantity","title","style","alignItems","display","marginRight","fontSize","textDecoration","backgroundColor","color","ProductItem","onAddToCartClicked","marginBottom","justifyContent","border","borderRadius","paddingLeft","boxShadow","className","onClick","disabled","ProductsList","children","connect","addToCart","dispatch","getState","types","addToCartUnsafe","initialState","addedIds","quantityById","indexOf","cart","rootReducer","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","toFixed","getCartProducts","Modal","props","handlerBuy","setState","isOpen","onBuy","this","Fragment","hasProd","React","Component","Cart","onCheckoutClicked","hasProducts","length","nodes","opacity","marginTop","checkout","shop","Carusel","class","data-mdb-ride","height","src","tv","alt","phone","nout","dvd","data-mdb-target","data-mdb-slide","aria-hidden","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","receiveProducts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c95787.chunk.js","sourcesContent":["/**\r\n * Mocking client-server processing\r\n */\r\nimport _products from './products.json'\r\n\r\nconst TIMEOUT = 100\r\n\r\n\r\nexport default {\r\n\r\n  getProducts: (cb, timeout) => {\r\n  \r\n  setTimeout( () => {\r\n     return\tcb(_products), timeout || TIMEOUT\r\n       }\r\n  \t)},\r\n\r\n\r\n\r\n\r\n  buyProducts: (payload, cb, timeout) => {\r\n  \tconsole.log(payload)\r\n  \tsetTimeout(() => cb(), timeout || TIMEOUT)\r\n  }\r\n\r\n}\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\r\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\r\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'","import { combineReducers } from 'redux'\r\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from './Types'\r\n\r\n\r\n\r\n\r\n// єта функция отнимает одну единицу товара от склада первоначального значения\r\nconst products = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n           // console.log(state) - почемуто только конкретний елемент\r\n         // console.log(state.inventory)\r\n\r\n        return {\r\n        ...state,\r\n        inventory: state.inventory - 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst byId = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n \r\n// Єтот case срабативает при загрузке\r\n\r\n    case RECEIVE_PRODUCTS:\r\n       // console.log(Array.isArray(action.products))\r\n       // console.log(state)\r\n\r\n        \r\n\r\n         // К нам прилетает при загрузке масив из обьектов\r\n          // А ми переделиваем его на обьект с ключами по каждому товару\r\n         // { 1 : { id: 1, title: 'vsfgdfg' }, 2 : { ...} } \r\n\r\n      return {\r\n        ...state,\r\n        ...action.products.reduce((obj, product) => {\r\n          obj[product.id] = product\r\n          return obj\r\n        }, {})\r\n      }\r\n\r\n\r\n     \r\n    default:\r\n\r\n\r\n      const { productId } = action\r\n      // console.log(productId)\r\n      \r\n   \r\n   // Если нажимаем на кнопку добавить товар в корзину\r\n      if (productId) {\r\n          \r\n          // прилетает только вибраний Id { Id: ..., }\r\n          // console.log( {[productId]: products(state[productId], action) })\r\n        \r\n\r\n        return {\r\n          ...state,\r\n          [productId]: products(state[productId], action)\r\n        }\r\n      }\r\n      return state\r\n  }\r\n}\r\n\r\n// Єта функция возвращает Id товара\r\n\r\nconst visibleIds = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n        \r\n        // прилетает масив с обьектов при загрузке с сервера (.json)\r\n        // console.log(action)\r\n\r\n      return action.products.map(product => product.id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  // Перечень товара\r\n  byId,\r\n    // Id\r\n  visibleIds\r\n})\r\n\r\n\r\nexport const getProduct = (state, id) =>{\r\n  \r\n    // console.log(state.byId[id])\r\n\r\n   return  state.byId[id]\r\n}\r\n\r\n\r\n\r\nexport const getVisibleProducts = state => {\r\n  // console.log(state)\r\n  return state.visibleIds.map(id => {\r\n    // console.log(getProduct(state, id))\r\n    return  getProduct(state, id)\r\n  } )\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Product = ({ price, quantity, title, id }) => (\r\n  <div style = {{     alignItems: 'center', display: 'flex' }} >\r\n   <span style = {{ marginRight: '10px', fontSize: '20px',\r\n\r\n    textDecoration: quantity ? 'none' : 'line-through'     \r\n\r\n    }} ><strong> { id } </strong></span>\r\n  \r\n    \r\n  <span style = {{ textDecoration: quantity ? 'none' : 'line-through',\r\n   backgroundColor: quantity? 'none': 'orange', color: quantity? 'white': 'black', fontSize:'25px'   }} >\r\n    {title} - &#36;{price}{quantity ? ` x ${quantity}` : null}</span>\r\n  </div>\r\n)\r\n\r\n// Product.propTypes = {\r\n//   price: PropTypes.number,\r\n//   quantity: PropTypes.number,\r\n//   title: PropTypes.string\r\n// }\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Product from './Product'\r\n\r\nconst ProductItem = ({ product, onAddToCartClicked }) => {\r\n \r\n\r\n\r\nreturn (  \r\n    <div>\r\n  <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'space-between',\r\n  border: '1px solid grey', borderRadius: '8px', paddingLeft: '15px',\r\n  boxShadow: '10px 10px 10px -3px' }}>\r\n    <Product\r\n      id = { product.id }\r\n      title={product.title}\r\n      price={product.price}\r\n      quantity={product.inventory} />\r\n    <button className = 'btn btn-success'\r\n      onClick={onAddToCartClicked}\r\n      disabled={product.inventory > 0 ? '' : 'disabled'}>\r\n      {product.inventory > 0 ? 'Add to Order' : 'Sold Out'}\r\n    </button>\r\n  </div>\r\n  </div>\r\n )\r\n}\r\n\r\nProductItem.propTypes = {\r\n  product: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    inventory: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  onAddToCartClicked: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ProductItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProductsList = ({ title, children }) => (\r\n  <div className = 'container main'  style = {{  }}>\r\n    <h3>{title} </h3>\r\n    <div className='media_product' style = {{  }}> {children }  </div>\r\n  </div>\r\n)\r\n\r\nProductsList.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ProductsList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../redux/actions'\r\nimport { getVisibleProducts } from '../redux/products'\r\nimport ProductItem from '../components/ProductItem'\r\nimport ProductsList from '../components/ProductsList'\r\n\r\nconst ProductsContainer = ({ products, addToCart } ) => {\r\n\r\n \r\n\r\n\r\n\r\n return (\r\n  <>\r\n  <ProductsList title=\"Products\">\r\n    {products.map(product =>\r\n      <ProductItem\r\n        key={product.id}\r\n        product={product}\r\n        onAddToCartClicked={() => addToCart(product.id)} />\r\n    )}\r\n  </ProductsList>\r\n   </>\r\n        )\r\n}\r\n\r\n\r\nProductsContainer.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    inventory: PropTypes.number.isRequired\r\n  })).isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   // console.log(getVisibleProducts(state.products))\r\n   return {\r\n       products: getVisibleProducts(state.products)\r\n    }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addToCart }\r\n)(ProductsContainer)\r\n","import shop from '../api/shop'\r\nimport * as types from './Types'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst receiveProducts = (products) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return {\r\n\r\n  type: types.RECEIVE_PRODUCTS,\r\n  products,\r\n  \r\n  }\r\n}\r\n\r\n\r\n// Єта функция загружает начальние данние с файла .json\r\nexport const getAllProducts = () => dispatch => {\r\n  shop.getProducts(products => {\r\n    dispatch(receiveProducts(products ))\r\n  })\r\n}\r\n\r\n\r\n// Главний акшн креатор\r\n// добавляет в карту\r\nconst addToCartUnsafe = productId => ({\r\n  type: types.ADD_TO_CART,\r\n  productId\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// При нажатий на кнопку \r\nexport const addToCart = productId => (dispatch, getState) => {\r\n\r\n\r\n\r\n    \r\n      // console.log(getState())\r\n\r\n// Если есть что-то на складе то ми добавляем в корзину, если нет ничего то ничего не будет\r\n  if (getState().products.byId[productId].inventory > 0) {\r\n    dispatch(addToCartUnsafe(productId))\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const checkout = products => (dispatch, getState) => {\r\n\r\n  console.log(products)\r\n  \r\n\r\n  const { cart } = getState()\r\n  \r\n  console.log(cart) \r\n\r\n\r\n\r\n  dispatch({\r\n    type: types.CHECKOUT_REQUEST\r\n  })\r\n  \r\n  shop.buyProducts(products, () => {\r\n\r\n\r\n\r\n\r\n\r\n    dispatch({\r\n      type: types.CHECKOUT_SUCCESS,\r\n      cart\r\n    })\r\n\r\n\r\n    // Replace the line above with line below to rollback on failure:\r\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\r\n  })\r\n}\r\n","import {\r\n  ADD_TO_CART,\r\n  CHECKOUT_REQUEST,\r\n  CHECKOUT_FAILURE\r\n} from './Types'\r\n\r\nconst  initialState = {\r\n  addedIds: [],\r\n  quantityById: {}\r\n}\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n          \r\n        // Проверяет есть ли такой товар в карте (корзине)\r\n\r\n      if (state.indexOf(action.productId) !== -1) {\r\n         \r\n         // console.log(state)\r\n\r\n\r\n        return state\r\n      }\r\n\r\n      \r\n       \r\n\r\n      return [ ...state, action.productId]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action\r\n          \r\n\r\n\r\n\r\n      return { ...state,\r\n         // Считает количетво вібраного товара\r\n\r\n        [productId]: (state[productId] || 0) + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n   // Єта функция редусер получает state и productId и возвращает количество вибраних товаров \r\n\r\n  \r\nexport const getQuantity = (state, productId) =>{\r\n  // console.log('efgrfrgrg')\r\n    // console.log((state.quantityById[productId]))\r\n return state.quantityById[productId] || 0\r\n}\r\n\r\n    // эта функция возвращает какай Id товара бил вибран\r\n\r\nexport const getAddedIds = state => {\r\n   // console.log(state.addedIds)\r\n\r\n  return  state.addedIds\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState\r\n    case CHECKOUT_FAILURE:\r\n      return action.cart\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action)\r\n      }\r\n  }\r\n}\r\n\r\nexport default cart\r\n","import {combineReducers} from 'redux'\r\nimport  cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\n\r\n\r\n\r\n// console.log(state)\r\n\r\nexport const rootReducer =combineReducers( {\r\n      cart,\r\n      products\r\n\r\n} )\r\n\r\n\r\n// Єта функция возвращает масив с какими Id били вибрани товари\r\nconst getAddedIds = state => {\r\n    // console.log(fromCart.getAddedIds(state.cart))\r\nreturn  fromCart.getAddedIds(state.cart)\r\n\r\n}\r\n\r\n\r\n\r\n// Эта функция возвращает количество товара вибраного по Id\r\n// Если три разних Id, то функция отработает три раза и покажет три числа\r\n\r\nconst getQuantity = (state, id) => {\r\n   // console.log( fromCart.getQuantity(state.cart, id))\r\n   return  fromCart.getQuantity(state.cart, id)\r\n}\r\n\r\n\r\n\r\nconst getProduct = (state, id) => {\r\n      \r\n      // console.log(fromProducts.getProduct(state.products, id))   \r\n\r\n   return  fromProducts.getProduct(state.products, id)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getTotal = state =>\r\n  getAddedIds(state)\r\n    .reduce((total, id) =>\r\n      total + getProduct(state, id).price * getQuantity(state, id),\r\n      0\r\n    )\r\n    .toFixed(2)\r\n\r\nexport const getCartProducts = state =>\r\n  getAddedIds(state).map(id => ({\r\n    ...getProduct(state, id),\r\n    quantity: getQuantity(state, id)\r\n  }))\r\n\r\n","import React from 'react'\r\nimport './Modal.css'\r\n\r\n\r\nexport default class Modal extends React.Component {\r\n     constructor( props ){\r\n       super(props)\r\n\r\n       this.state = {\r\n       \t  isOpen : false \r\n       }\r\n\r\n\r\n     }\r\n\r\n     \r\n         handlerBuy = () => {\r\n       this.setState({isOpen: true})\r\n       this.props.onBuy()\r\n      console.log('211111111111111111111111111111')\r\n       }\r\n\r\n\r\n\r\n\trender(){\r\n\r\n\r\n\r\n\r\n // console.log(this.state.isOpen)  \r\n console.log(this.props) \r\n\r\n\r\n\t\treturn(\r\n               \r\n               <React.Fragment>\r\n                  <button onClick = {   this.handlerBuy   } \r\n                  className='btn btn-primary'\r\n                  disabled = { this.props.hasProd ? '' : 'disabled' } \r\n\r\n                  >\r\n                   {this.props.children}</button>                     \r\n\r\n                  {this.state.isOpen?  (<div className = 'modall' >\r\n\r\n                       <div className='modall-body' > \r\n                           <h1> Success </h1>\r\n                           <p>  Thank you for your order ! </p>\r\n                           <button\r\n                              \r\n                              className = 'btn btn-dark'\r\n                           \r\n\r\n                            onClick = { () => this.setState({isOpen : false\r\n                           }) }> Close </button> \r\n                       </div>\r\n\r\n                  </div>) : null }\r\n\r\n               </React.Fragment>\r\n\r\n\t\t\t)\r\n\t}\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Product from './Product'\r\nimport Modal from './modal/Modal'\r\n\r\nconst Cart  = ({ products, total, onCheckoutClicked }) => {\r\n  const hasProducts = products.length > 0\r\n  const nodes = hasProducts ? (\r\n    products.map(product =>\r\n      <Product\r\n        title={product.title}\r\n        price={product.price}\r\n        quantity={product.quantity}\r\n        key={product.id}\r\n        id = { product.id }\r\n      />\r\n    )\r\n  ) : (\r\n    <em>Please choose your Product and press Add to Order.</em>\r\n  )\r\n\r\n  console.log(nodes)\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className ='container cart' style = {{ opacity: '1', marginBottom: '100px' }}   >\r\n      <h3> Your Order</h3>\r\n      <div className = 'cart' style = {{ marginBottom: '20px', marginTop: '20px' }} > {nodes}< /div>\r\n      <p style ={{ fontSize: '30px' }} >Total: &#36;{total}</p>\r\n      <Modal onBuy={onCheckoutClicked}\r\n        hasProd={hasProducts}\r\n         >\r\n        BUY\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Cart.propTypes = {\r\n//   products: PropTypes.array,\r\n//   total: PropTypes.string,\r\n//   onCheckoutClicked: PropTypes.func\r\n// }\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { checkout } from '../redux/actions'\r\nimport { getTotal, getCartProducts } from '../redux/rootReducer'\r\nimport Cart from '../components/Cart'\r\n\r\nconst CartContainer = ({ products, total, checkout }) => {\r\n\r\n\r\n\r\n//  <div  className = 'container cart'  style={{ marginBottom: '20px', display: 'flex',\r\n//      justifyContent: 'space-between',\r\n//   border: '1px solid grey', borderRadius: '8px', paddingLeft: '15px', marginBottom:'100px' }}\r\n//   >  \r\n\r\n// </div>\r\n\r\n\r\nreturn\t(\r\n   \r\n     <Cart\r\n    products={products}\r\n    total={total}\r\n    onCheckoutClicked={() => checkout(products)} />\r\n    \r\n\r\n)\r\n}\r\n\r\nCartContainer.propTypes = {\r\n  products: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired\r\n  })).isRequired,\r\n  total: PropTypes.string,\r\n  checkout: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: getCartProducts(state),\r\n  total: getTotal(state)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { checkout }\r\n)(CartContainer)\r\n","export default __webpack_public_path__ + \"static/media/tv.6051ad76.jpg\";","export default __webpack_public_path__ + \"static/media/phone.72b63436.jpg\";","export default __webpack_public_path__ + \"static/media/nout.76cdfe5d.jpeg\";","export default __webpack_public_path__ + \"static/media/dvd.60f756ff.png\";","import React from 'react'\r\nimport tv from './pictures/tv.jpg'\r\nimport phone  from './pictures/phone.jpg'\r\nimport nout from './pictures/nout.jpeg'\r\nimport dvd from './pictures/dvd.png'\r\n\r\n\r\n\r\n// maxHeight: '150px', width: 'auto'\r\n\r\n\r\nfunction Carusel() {\r\n\treturn (\r\n           <div  style = {{ marginBottom: '50px' }} className='container' >\r\n     \r\n\r\n<div id=\"carouselExampleControls\" class=\"carousel slide\" data-mdb-ride=\"carousel\">\r\n  <div class=\"carousel-inner car\"  style = {{ height: '450px' }} > \r\n    <div class=\"carousel-item active\">\r\n      <img\r\n        style = {{ height: '-webkit-fill-available' }} \r\n        src={tv}\r\n        className=\"d-block w-100\"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img\r\n        style = {{ height: '-webkit-fill-available' }} \r\n        src={ phone }\r\n        class=\"d-block w-100 \"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n\r\n\r\n    <div class=\"carousel-item\">\r\n      <img\r\n        style = {{ height: '-webkit-fill-available' }}\r\n        src={nout}\r\n        class=\"d-block w-100 \"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n\r\n\r\n     <div class=\"carousel-item\">\r\n      <img\r\n        style = {{ height: '' }}\r\n        src={dvd}\r\n        class=\"d-block w-100 \"\r\n        alt=\"...\"\r\n      />\r\n    </div>\r\n\r\n\r\n  </div>\r\n  <button\r\n    class=\"carousel-control-prev\"\r\n    type=\"button\"\r\n    data-mdb-target=\"#carouselExampleControls\"\r\n    data-mdb-slide=\"prev\"\r\n  >\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Previous</span>\r\n  </button>\r\n  <button\r\n    class=\"carousel-control-next\"\r\n    type=\"button\"\r\n    data-mdb-target=\"#carouselExampleControls\"\r\n    data-mdb-slide=\"next\"\r\n  >\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Next</span>\r\n  </button>\r\n</div>\r\n\r\n\r\n           </div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default Carusel","import React from 'react'\nimport ProductsContainer from './containers/ProductsContainer'\nimport CartContainer from './containers/CartContainer'\nimport Carusel from './components/Carusel'\nimport Modal from './components/modal/Modal'\n\nconst App = () => (\n  <div>\n\n      <Carusel />\n       \n\n    <h2 style = {{ textAlign: 'center', marginBottom: '50px' }} > Online Shopping from Store</h2>\n     <div className= 'container'> \n    <h3 className ='my' >  created by Serhii Bondarchuk </h3>\n    <p className= 'my' \n     style = {{   marginBottom: '50px' }}   \n\n      >amax9111@gmail.com  </p>    \n      </div>\n    <ProductsContainer />\n    <br/><hr/>\n       <CartContainer />\n  </div>\n)\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\n\n\nimport { getAllProducts } from './redux/actions'\n\n\n\nimport {rootReducer} from './redux/rootReducer'\n\nconst middleware = [thunk]\n\n// console.log([thunk])\n\n\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(...middleware),\n  // other store enhancers if any\n));\n\n// console.log(store.getState())\n\nstore.dispatch(getAllProducts())\n\n// console.log(store.getState())\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider  store = {store} >\n    <App />\n  </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}